#!/bin/sh

STAGED_GO_FILES=$(git diff --cached --name-status --diff-filter d -- '*.go' | awk '{ print $2 }')
if [[ "$STAGED_GO_FILES" = "" ]]; then
  exit 0
fi

GOIMPORTS=$GOPATH/bin/goimports

# Check for goimports
if [[ ! -x "$GOIMPORTS" ]]; then
  printf "\t`tput bold`Please install goimports`tput sgr0` (go get golang.org/x/tools/cmd/goimports) or run make setup"
  exit 1
fi

PASS=true

printf "\n`tput bold`GoImports:`tput sgr0`\n"
for FILE in $STAGED_GO_FILES
do
  # Run goimports on the staged file
  $GOIMPORTS -w $FILE
  FILECHANGED=$(git --no-pager diff --name-only $FILE | wc -l | awk '{print $1}')
  if [[ $FILECHANGED != 0 ]]; then
    printf "needs following changes\n"
    printf "%s\n" "`git --no-pager diff --unified=0 $FILE | tail +6`"
    printf "\t`tput setaf 1`[êÑÇ] $FILE`tput sgr0`\n"
    git checkout -q $FILE
    PASS=false
  else
    printf "\t`tput setaf 2`[‚úì] $FILE`tput sgr0`\n"
  fi
done

if ! $PASS; then
  exit 1
fi

exit 0
